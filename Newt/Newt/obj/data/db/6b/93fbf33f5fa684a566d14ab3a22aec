// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
/// <summary>
/// Prepares for lighting prepass for any kind of light.
/// </summary>
class DeferredLightingShader : DeferredTiledShader, Transformation, PositionVSBase, NormalVSBase
{
    compose DeferredLightingBase lightingGroups[];

    // TODO: in Shading?
    override stage void PSMain()
    {
        base.PSMain();
        this.GenerateNormalVS_PS();
        float3 positionVS = this.PositionVS();
        float3 eyeVS = -normalize(positionVS);
        float3 normalVS = this.NormalVS();

        streams.ColorTarget = 0.0f;

        foreach (var lightingGroup in lightingGroups)
            streams.ColorTarget += lightingGroup.ComputeLighting(positionVS, normalVS, eyeVS);
    }
};