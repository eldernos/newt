// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
/// <summary>
/// Computes attenuation for spot lights.
/// </summary>
class SpotShading : PointShading, LightParameters
{
    override float3 GetAttenuation(int lightIndex)
    {
        float3 radiusAttenuation = base.GetAttenuation(lightIndex);

        float3 dirToLight = GetDirectionToLight(lightIndex);
        dirToLight = normalize(-dirToLight);
        float3 lightDir = GetLightDirection(lightIndex);
        lightDir = normalize(lightDir);
        float fieldAngle = LightSpotFieldAngle[lightIndex];
        float beamAngle = LightSpotBeamAngle[lightIndex];
        float factor = smoothstep(fieldAngle, beamAngle, dot(dirToLight, lightDir));
        return radiusAttenuation * float3(factor, factor, factor);
    }
};