// Copyright (c) 2014 Silicon Studio Corp. (http://siliconstudio.co.jp)
// This file is distributed under GPL v3. See LICENSE.md for details.
/// <summary>
/// Computes per-vertex diffuse shading.
/// </summary>
class ShadingDiffusePerVertex : ShadingDiffuse, ShadingPerVertex
{
    compose BRDFDiffuseBase brdfDiffuse = stage;

    override float3 ComputeDiffuseInfluence(float3 albedo, int lightIndex)
    {
        float3 lightDirection = normalize(GetDirectionToLight(lightIndex));
        float3 lightColor = LightColorsWithGamma[lightIndex];
        return LightIntensities[lightIndex] * brdfDiffuse.ComputeDiffuseLighting(lightColor, lightDirection, streams.ShadingNormal, streams.ShadingEye);
    }
};